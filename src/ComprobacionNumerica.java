
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author floow
 */
public class ComprobacionNumerica extends javax.swing.JFrame {

    /**
     * Creates new form ComprobacionNumerica
     */
    public ComprobacionNumerica() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        Numero = new javax.swing.JTextField();
        Comprobar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel1.setText("    Comprobacion");

        jLabel2.setText("Ingresar Numero:");

        Numero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NumeroActionPerformed(evt);
            }
        });

        Comprobar.setText("Comprobar");
        Comprobar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComprobarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Comprobar)
                    .addComponent(Numero, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(70, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(83, 83, 83))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Numero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 70, Short.MAX_VALUE)
                .addComponent(Comprobar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void NumeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NumeroActionPerformed
     // Este método se llama cuando se realiza una acción en el campo de texto "Numero"
    // Lo convertimos el campo de texto a numero
        int num1 = Integer.parseInt(Numero.getText());
    }//GEN-LAST:event_NumeroActionPerformed

     
// Este método se llama cuando se realiza una acción en el botón "Comprobar"
    private void ComprobarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComprobarActionPerformed
       
       // Convierte el texto ingresado en el campo de texto a un número entero
    int numero = Integer.parseInt(Numero.getText());

    // Utiliza un StringBuilder para construir el mensaje que se mostrará en la ventana emergente
    StringBuilder mensaje = new StringBuilder();

    // Comprobamos si es un número perfecto
    int Divisores = NumPerfecto(numero);
    if (Divisores == numero) {
        mensaje.append(numero).append(" es un número perfecto :D\n");
    } else {
        mensaje.append(numero).append(" no es un número perfecto.\n");
    }

    // Verificamos si es un número primo
    if (NumPrimo(numero)) {
        mensaje.append(numero).append(" es un número primo.\n");

        // Mostramos los números primos antes del número ingresado
        mensaje.append("Números primos antes de ").append(numero).append(": ").append(primosAnteriores(numero)).append("\n");

        // Calculamos la suma de primos menores al número ingresado
        int sumaPrimosMenores = SumaPrimosMenores(numero);
        mensaje.append("Suma de números primos menores que ").append(numero).append(": ").append(sumaPrimosMenores).append("\n");

        // Calculamos la raíz cuadrada de la suma de primos
        double raizSumaPrimos = Math.sqrt(sumaPrimosMenores);
        mensaje.append("Raíz cuadrada de la suma de primos: ").append(raizSumaPrimos).append("\n");
    }else{
         mensaje.append(numero).append(" no es un número primo.\n");
    }

    // Mostramos toda la información en una sola ventana emergente
    JOptionPane.showMessageDialog(this, mensaje.toString());
    }//GEN-LAST:event_ComprobarActionPerformed

    
    private int NumPerfecto(int numero){
        
    int Divisores = 0;
    
    // Calcular la suma de los divisores
    for (int i = 1; i <= numero / 2; i++) {
        
        //Verifica si i es un divisor de numero. 
        //Esto se hace comprobando si el residuo de la división de numero entre i es igual a cero.
        //Si es cero, significa que i es un divisor de numero.
        if (numero % i == 0) {
            
            //Si la condición del if se cumple, se agrega a la variable Divisores. 
            //La variable Divisores se utiliza para acumular la suma de los divisores propios.
            Divisores += i;   
        }
    }
        return Divisores;

    }
    
     private boolean NumPrimo(int numero) {
         //verificamos si el numero es menor o igual a 1, no es primo :)
        if (numero <= 1) {
            return false;
        }

        //verificamos si el numero es divisible entre 2 y la raiz cuadrada
        for (int i = 2; i <= Math.sqrt(numero); i++) {
            if (numero % i == 0) {
                //si es divisible entonces no es primo
                return false;
            }
        }
        //y si no es divisible por ningun numero, entonces es primo :D
        return true;
    }
     
     private String primosAnteriores(int numero) {
         
    // Se crea un objeto StringBuilder llamado primosAnteriores para acumular los números primos encontrados.
    StringBuilder primosAnteriores = new StringBuilder();
    
    // Buscar números primos antes del número ingresado
    //Se inicia un bucle que va desde numero - 1 hasta 2. 
    //Esto busca números primos antes del número ingresado.
    for (int i = numero - 1; i >= 2; i--) {
        
        //si i es primo lo agregamos al builder
        if (NumPrimo(i)) {
            primosAnteriores.append(i).append(" ");
        }
    }
    
    return primosAnteriores.toString();
}
     
     
     private int SumaPrimosMenores(int num) {
         //variable para almacenar la suma de los primos :D
    int sumaPrimosMenores = 0;

    //Se inicia un bucle que itera desde 2 hasta num - 1. Esto busca números primos menores que num.
    for (int i = 2; i < num; i++) {
        
       //variable booleana que indica si i es mi primo :v
        boolean esPrimoMenor = true;
        
        //Se inicia un bucle interno que verifica si i es divisible por algún número entre 2 y la raíz cuadrada de i. 
        //Si encuentra algún divisor, esPrimoMenor se establecerá en false.
        for (int j = 2; j <= Math.sqrt(i); j++) {
            
            //verificamos si i es divisible por j, si lo es entonces no es um numero primo.
            if (i % j == 0) {
                esPrimoMenor = false;
                break;
            }
        }
        //verificamos si i es primo y se agrega a la suma.
        if (esPrimoMenor) {
            sumaPrimosMenores += i;
        }
    }
    //retornamos la suma de todos los primos
    return sumaPrimosMenores;
     }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ComprobacionNumerica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ComprobacionNumerica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ComprobacionNumerica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ComprobacionNumerica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ComprobacionNumerica().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Comprobar;
    private javax.swing.JTextField Numero;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
